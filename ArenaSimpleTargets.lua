local addonName, addon = ...

local frame = CreateFrame("Frame")
frame:RegisterEvent("PLAYER_LOGIN")
frame:RegisterEvent("ARENA_PREP_OPPONENT_SPECIALIZATIONS")
frame:SetScript("OnEvent", function(self, event, ...)
    addon[event](addon, event, ...)
end)

local PARTY_MACRO_NAMES = {
    "AST:PartyY",
    "AST:PartyX"
}

local ENEMY_MACRO_NAMES = {
    "AST:EnemyX",
    "AST:EnemyY",
    "AST:EnemyZ"
}

local PARTY_MACRO_BODY = "-- Auto-generated by ArenaSimpleTargets\n/tar party%d"
local ENEMY_MACRO_BODY = "-- Auto-generated by ArenaSimpleTargets\n/tar arena%d"

local DEBUG_PLAYER_MSG = "Player Name:%s, Members:%d."
local DEBUG_PARTY_MSG = "Party Name:%s, Party Index:%d."
local DEBUG_MACRO_MSG = "Macro Name:%s, Name Index:%d."
local DEBUG_ENEMY_MSG = "Enemy Index:%d, Spec ID:%d, Spec:%s, Role:%s."

local NO_AVAILABLE_MACRO_SLOTS = "Cannot create the macro '%s' because there are no available macro slots."

local function PrintMessage(...)
    print("<ArenaSimpleTargets>", ...)
end

local function CreateOrEditMacro(name, body)
    if InCombatLockdown() then return end
    if GetMacroInfo(name) then
        EditMacro(name, nil, nil, body, 1, 1)
        PrintMessage("EditMacro", name, body)
    elseif GetNumMacros() >= MAX_ACCOUNT_MACROS then
        PrintMessage(NO_AVAILABLE_MACRO_SLOTS:format(name))
    else
        CreateMacro(name, "INV_Misc_QuestionMark", body)
        PrintMessage("CreateMacro", name, body)
    end
end

function addon:PLAYER_LOGIN(event)
    frame:UnregisterEvent(event)
    for index = 1, #PARTY_MACRO_NAMES do
        local macroName = PARTY_MACRO_NAMES[index]
        CreateOrEditMacro(macroName, "")
    end
    for index = 1, #ENEMY_MACRO_NAMES do
        local macroName = ENEMY_MACRO_NAMES[index]
        CreateOrEditMacro(macroName, "")
    end
end

function addon:ARENA_PREP_OPPONENT_SPECIALIZATIONS(event)
    local _, instanceType = IsInInstance()
    if instanceType ~= "arena" then return end

    local numMembers = GetNumGroupMembers()
    if numMembers > 1 and numMembers <= 3 then
        local nameIndex = 1
        local playerName = GetUnitName("player", true)
        PrintMessage(DEBUG_PLAYER_MSG:format(playerName, numMembers))
        for index = 1, numMembers do
            local partyId = "party" .. index
            local partyName = GetUnitName(partyId, true)
            PrintMessage(DEBUG_PARTY_MSG:format(partyName or playerName, index))
            if partyName then
                local macroName = PARTY_MACRO_NAMES[nameIndex]
                if numMembers == 2 then
                    macroName = ENEMY_MACRO_NAMES[2]
                else
                    nameIndex = nameIndex + 1
                end
                PrintMessage("Party", DEBUG_MACRO_MSG:format(macroName, nameIndex))
                CreateOrEditMacro(macroName, PARTY_MACRO_BODY:format(index))
            end
        end
    end

    local numOpps = GetNumArenaOpponentSpecs()
    if numOpps > 0 and numOpps <= 3 then
        local nameIndex = 1
        for index = 1, numOpps do
            local specID = GetArenaOpponentSpec(index)
            local _, spec, _, _, _, role,_ = GetSpecializationInfoByID(specID)
            PrintMessage(DEBUG_ENEMY_MSG:format(index, specID, spec, role))
            if specID > 0 then
                local macroName = ENEMY_MACRO_NAMES[nameIndex]
                if role == "HEALER" then
                    macroName = ENEMY_MACRO_NAMES[3]
                else
                    nameIndex = nameIndex + 1
                end
                PrintMessage("Enemey", DEBUG_MACRO_MSG:format(macroName, nameIndex))
                CreateOrEditMacro(macroName, ENEMY_MACRO_BODY:format(index))
            end
        end
    end
end